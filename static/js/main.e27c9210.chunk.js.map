{"version":3,"sources":["index.js"],"names":["uniqueKey","Tabla","state","tableRows","addRow","chData","setState","concat","carnet","schedule","late","i","this","splice","map","row","console","log","key","Date","toLocaleDateString","value","className","handleDeleteRow","Form","callBackFromParent","scope","id","rendertableRows","React","Component","props","handleClick","document","getElementById","options","realSchedule","selectedIndex","text","parseLateSwitch","checked","message","htmlFor","name","type","onClick","renderH1","renderInput","renderSelect","renderSwitch","renderInsertButton","ReactDOM","render"],"mappings":"yOAIIA,G,MAAY,GAEVC,E,2MACFC,MAAQ,CACJC,UAAW,I,EAGfC,OAAS,SAAAC,GACL,EAAKC,SAAS,CACVH,UAAW,EAAKD,MAAMC,UAAUI,OAAO,CACnC,CAAEC,OAAQH,EAAOG,OAAQC,SAAUJ,EAAOI,SAAUC,KAAML,EAAOK,UAGzEV,K,+EAGYW,GACZ,IAAIR,EAAS,YAAOS,KAAKV,MAAMC,WAC/BA,EAAUU,OAAOF,EAAG,GACpBC,KAAKN,SAAS,CACVH,UAAWA,M,wCAIA,IAAD,OACd,OAAOS,KAAKV,MAAMC,UAAUW,KAAI,SAAAC,GAAQ,IAAD,EAEnC,OADAC,QAAQC,IAAIF,GAER,wBAAIG,IAAKlB,GACL,4BAAKe,EAAIP,QACT,4BAAKO,EAAIN,UACT,6BAAK,IAAIU,MAAOC,sBAChB,4BAAKL,EAAIL,MACT,4BACI,+BACIW,MAAOrB,EACPsB,UAAU,OAFd,0BAGc,cAHd,yBAIa,kBAAM,EAAKC,qBAJxB,kB,+BAehB,OACI,yBAAKD,UAAU,aACX,kBAACE,EAAD,CAAMC,mBAAoBb,KAAKR,SAC/B,iCACI,2BAAOkB,UAAU,qBACb,+BACI,wBAAIA,UAAU,cACV,wBAAII,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,0BACA,wBAAIA,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,cAGR,2BAAOC,GAAG,cAAcf,KAAKgB,0B,GA7DjCC,IAAMC,WAqEpBN,E,YACF,WAAYO,GAAQ,IAAD,8BACf,4CAAMA,KAuEVC,YAAc,WACV,IAAIxB,EAASyB,SAASC,eAAe,gBAAgBb,MACjDZ,EAAWwB,SAASC,eAAe,kBAAkBC,QACrDC,EAAe3B,EAASA,EAAS4B,eAAeC,KAChD5B,EAAO6B,EAAgBN,SAASC,eAAe,eAAeM,SAClE,EAAKT,MAAMN,mBAAmB,CAC1BjB,OAAQA,EACRC,SAAU2B,EACV1B,KAAMA,KAhFK,E,0EAIN+B,GACT,OACI,yBAAKnB,UAAU,cACX,2BAAOoB,QAAQ,YAAf,0BACA,4BAAQC,KAAK,WAAWrB,UAAU,eAAeK,GAAG,kBAChD,gCAASc,EAAQ,IACjB,gCAASA,EAAQ,IACjB,gCAASA,EAAQ,IACjB,gCAASA,EAAQ,IACjB,gCAASA,EAAQ,IACjB,gCAASA,EAAQ,Q,oCAO7B,OACI,yBAAKnB,UAAU,cACX,2BAAOoB,QAAQ,SAASpB,UAAU,2BAAlC,qBACuB,KAEvB,2BACIA,UAAU,eACVsB,KAAK,OACLD,KAAK,SACLhB,GAAG,oB,+BAMVc,GACL,OAAO,4BAAKA,K,qCAIZ,OACI,yBAAKnB,UAAU,cACX,yBAAKA,UAAU,gCACX,2BACIsB,KAAK,WACLtB,UAAU,uBACVK,GAAG,gBAEP,2BAAOL,UAAU,uBAAuBoB,QAAQ,eAAhD,2B,2CAQM,IAAD,OACjB,OACI,yBAAKpB,UAAU,cACX,4BACIsB,KAAK,SACLtB,UAAU,iBACVK,GAAG,aACHkB,QAAS,kBAAM,EAAKb,gBAJxB,e,+BAyBR,OACI,yBAAKV,UAAU,aACX,yBAAKA,UAAU,aACVV,KAAKkC,SAAS,2BACdlC,KAAKmC,cACLnC,KAAKoC,aAAa,CACf,wBACA,0BACA,+BACA,0BACA,0BACA,6BAEHpC,KAAKqC,eACLrC,KAAKsC,2B,GApGPrB,IAAMC,WA2GzBqB,IAASC,OAAO,kBAACnD,EAAD,MAAWgC,SAASC,eAAe,SAEnD,IAAIK,EAAkB,SAAAlB,GAClB,OAAIA,EACO,iBAEA,a","file":"static/js/main.e27c9210.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nvar uniqueKey = 0;\n\nclass Tabla extends React.Component {\n    state = {\n        tableRows: []\n    };\n\n    addRow = chData => {\n        this.setState({\n            tableRows: this.state.tableRows.concat([\n                { carnet: chData.carnet, schedule: chData.schedule, late: chData.late }\n            ])\n        });\n        uniqueKey++;\n    };\n\n    handleDeleteRow(i) {\n        let tableRows = [...this.state.tableRows];\n        tableRows.splice(i, 1);\n        this.setState({\n            tableRows: tableRows\n        });\n    }\n\n    rendertableRows() {\n        return this.state.tableRows.map(row => {\n            console.log(row);\n            return (\n                <tr key={uniqueKey}>\n                    <td>{row.carnet}</td>\n                    <td>{row.schedule}</td>\n                    <td>{new Date().toLocaleDateString()}</td>\n                    <td>{row.late}</td>\n                    <td>\n                        <button\n                            value={uniqueKey}\n                            className=\"btn\"\n                            className=\"btn-danger\"\n                            onClick={() => this.handleDeleteRow()}\n                        >\n                            Drop\n            </button>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Form callBackFromParent={this.addRow} />\n                <section>\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr className=\"table-dark\">\n                                <th scope=\"col\">Carnet</th>\n                                <th scope=\"col\">Horario de laboratorio</th>\n                                <th scope=\"col\">Hora de ingreso</th>\n                                <th scope=\"col\">¿Tarde?</th>\n                                <th scope=\"col\">Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"table_body\">{this.rendertableRows()}</tbody>\n                    </table>\n                </section>\n            </div>\n        );\n    }\n}\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    renderSelect(message) {\n        return (\n            <div className=\"form-group\">\n                <label htmlFor=\"schedule\">Seleccione el horario:</label>\n                <select name=\"schedule\" className=\"form-control\" id=\"schedule_field\">\n                    <option>{message[0]}</option>\n                    <option>{message[1]}</option>\n                    <option>{message[2]}</option>\n                    <option>{message[3]}</option>\n                    <option>{message[4]}</option>\n                    <option>{message[5]}</option>\n                </select>\n            </div>\n        );\n    }\n\n    renderInput() {\n        return (\n            <div className=\"form-group\">\n                <label htmlFor=\"carnet\" className=\"col-sm-2 col-form-label\">\n                    Ingrese el carnet:{\" \"}\n                </label>\n                <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    name=\"carnet\"\n                    id=\"carnet_field\"\n                />\n            </div>\n        );\n    }\n\n    renderH1(message) {\n        return <h1>{message}</h1>;\n    }\n\n    renderSwitch() {\n        return (\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-switch\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        id=\"late_switch\"\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"late_switch\">\n                        ¿Llegó tarde?\n          </label>\n                </div>\n            </div>\n        );\n    }\n\n    renderInsertButton() {\n        return (\n            <div className=\"form-group\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    id=\"submit_btn\"\n                    onClick={() => this.handleClick()}\n                >\n                    Ingresar\n        </button>\n            </div>\n        );\n    }\n\n    handleClick = () => {\n        let carnet = document.getElementById(\"carnet_field\").value;\n        let schedule = document.getElementById(\"schedule_field\").options;\n        let realSchedule = schedule[schedule.selectedIndex].text;\n        let late = parseLateSwitch(document.getElementById(\"late_switch\").checked);\n        this.props.callBackFromParent({\n            carnet: carnet,\n            schedule: realSchedule,\n            late: late\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    {this.renderH1(\"Registro de laboratorio\")}\n                    {this.renderInput()}\n                    {this.renderSelect([\n                        \"Lunes de 9:00 a 11.00\",\n                        \"Martes de 13:30 a 15:30\",\n                        \"Miércoles de 9:00 a 11.00\",\n                        \"Jueves de 13:30 a 15:30\",\n                        \"Viernes de 9:00 a 11.00\",\n                        \"Viernes de 15:30 a 17:30\"\n                    ])}\n                    {this.renderSwitch()}\n                    {this.renderInsertButton()}\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<Tabla />, document.getElementById(\"root\"));\n\nvar parseLateSwitch = value => {\n    if (value) {\n        return \"Llegó tarde\";\n    } else {\n        return \"A tiempo\";\n    }\n};\n\n"],"sourceRoot":""}